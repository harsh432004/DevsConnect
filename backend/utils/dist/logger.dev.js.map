{"version":3,"sources":["logger.js"],"names":["winston","require","DailyRotateFile","format","transports","createLogger","combine","timestamp","printf","colorize","errors","customLevels","levels","error","warn","info","http","debug","colors","addColors","logFormat","level","message","stack","logger","Console","handleExceptions","filename","datePattern","maxFiles","zippedArchive","exitOnError","stream","write","trim","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;IACQE,M,GAAqCH,O,CAArCG,M;IAAQC,U,GAA6BJ,O,CAA7BI,U;IAAYC,Y,GAAiBL,O,CAAjBK,Y;IACpBC,O,GAAiDH,M,CAAjDG,O;IAASC,S,GAAwCJ,M,CAAxCI,S;IAAWC,M,GAA6BL,M,CAA7BK,M;IAAQC,Q,GAAqBN,M,CAArBM,Q;IAAUC,M,GAAWP,M,CAAXO,M;AAE9C,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,CADD;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNC,IAAAA,IAAI,EAAE,CAHA;AAINC,IAAAA,IAAI,EAAE,CAJA;AAKNC,IAAAA,KAAK,EAAE;AALD,GADW;AAQnBC,EAAAA,MAAM,EAAE;AACNL,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,IAAI,EAAE,QAFA;AAGNC,IAAAA,IAAI,EAAE,OAHA;AAINC,IAAAA,IAAI,EAAE,SAJA;AAKNC,IAAAA,KAAK,EAAE;AALD;AARW,CAArB;AAiBAjB,OAAO,CAACmB,SAAR,CAAkBR,YAAY,CAACO,MAA/B;AAEA,IAAME,SAAS,GAAGZ,MAAM,CAAC,gBAA0C;AAAA,MAAvCa,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBf,SAAuB,QAAvBA,SAAuB;AAAA,MAAZgB,KAAY,QAAZA,KAAY;AACjE,mBAAUhB,SAAV,eAAwBc,KAAxB,gBAAmCE,KAAK,IAAID,OAA5C;AACD,CAFuB,CAAxB;AAIA,IAAME,MAAM,GAAGnB,YAAY,CAAC;AAC1BO,EAAAA,MAAM,EAAED,YAAY,CAACC,MADK;AAE1BT,EAAAA,MAAM,EAAEG,OAAO,CACbC,SAAS,CAAC;AAAEJ,IAAAA,MAAM,EAAE;AAAV,GAAD,CADI,EAEbO,MAAM,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAFO,EAGbd,QAAQ,EAHK,EAIbW,SAJa,CAFW;AAQ1BhB,EAAAA,UAAU,EAAE,CACV,IAAIA,UAAU,CAACqB,OAAf,CAAuB;AACrBJ,IAAAA,KAAK,EAAE,OADc;AAErBK,IAAAA,gBAAgB,EAAE;AAFG,GAAvB,CADU,EAKV,IAAIxB,eAAJ,CAAoB;AAClByB,IAAAA,QAAQ,EAAE,6BADQ;AAElBC,IAAAA,WAAW,EAAE,YAFK;AAGlBC,IAAAA,QAAQ,EAAE,KAHQ;AAIlBR,IAAAA,KAAK,EAAE,MAJW;AAKlBK,IAAAA,gBAAgB,EAAE,IALA;AAMlBI,IAAAA,aAAa,EAAE;AANG,GAApB,CALU,CARc;AAsB1BC,EAAAA,WAAW,EAAE;AAtBa,CAAD,CAA3B;AAyBAP,MAAM,CAACQ,MAAP,GAAgB;AACdC,EAAAA,KAAK,EAAE,eAAUX,OAAV,EAAmB;AACxBE,IAAAA,MAAM,CAACR,IAAP,CAAYM,OAAO,CAACY,IAAR,EAAZ;AACD;AAHa,CAAhB;AAMAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["const winston = require('winston');\r\nconst DailyRotateFile = require('winston-daily-rotate-file');\r\nconst { format, transports, createLogger } = winston;\r\nconst { combine, timestamp, printf, colorize, errors } = format;\r\n\r\nconst customLevels = {\r\n  levels: {\r\n    error: 0,\r\n    warn: 1,\r\n    info: 2,\r\n    http: 3,\r\n    debug: 4,\r\n  },\r\n  colors: {\r\n    error: 'red',\r\n    warn: 'yellow',\r\n    info: 'green',\r\n    http: 'magenta',\r\n    debug: 'blue',\r\n  },\r\n};\r\n\r\nwinston.addColors(customLevels.colors);\r\n\r\nconst logFormat = printf(({ level, message, timestamp, stack }) => {\r\n  return `${timestamp} [${level}]: ${stack || message}`;\r\n});\r\n\r\nconst logger = createLogger({\r\n  levels: customLevels.levels,\r\n  format: combine(\r\n    timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\r\n    errors({ stack: true }),\r\n    colorize(),\r\n    logFormat\r\n  ),\r\n  transports: [\r\n    new transports.Console({\r\n      level: 'debug',\r\n      handleExceptions: true,\r\n    }),\r\n    new DailyRotateFile({\r\n      filename: 'logs/application-%DATE%.log',\r\n      datePattern: 'YYYY-MM-DD',\r\n      maxFiles: '14d',\r\n      level: 'info',\r\n      handleExceptions: true,\r\n      zippedArchive: true,\r\n    }),\r\n  ],\r\n  exitOnError: false,\r\n});\r\n\r\nlogger.stream = {\r\n  write: function (message) {\r\n    logger.http(message.trim());\r\n  },\r\n};\r\n\r\nmodule.exports = logger;"],"file":"logger.dev.js"}